  a running website does not need to be stoped, rebuild and run everytime you change source code
  there need to streamline changes made on host to reflect immediately in container
  this can be achieved through bind mount 
  when you use a bind mount, a file or directory on the host machine is mounted into a container running on the smae host.


  1. start the web app and mount current dirrectory into the container 

  docker container run \
  --detach \
  --publish 80:80 \
  --name linux_tweet_app \
  --mount type=bind,source="$(PWD)",target=/usr/share/nginx/htmml \
  $DOCKERID/linux_tweet_app:1.0
  
lets modify the running website 
cp index-new.html index.html

to persist the changes you made to the index.html file into the image, you need to build a new version of the image 
docker image build --tag $DOCKERID/linux_tweet_app:2.0 .

Docker ensure only portion of the image that changed vs the whole image
dockery image ls 

another issue is that we cannot have two containers using port 80 on the same host 

we will starting a new container and publish it on port 8080
we need to give our container a unique name old_linux_tweet_app

docker container run \
--detach \
--publish 8080:80 \
--name old_linux_app \
$DOCKERID/linux_tweet_app:1.0



docker image ls -f reference="$DUCKERID/*"
this should show the two images tagged as 1.0 and 2.0
these images are stored in the hosts local repository 
so we might need to push the images to public repository so as to run them from any linux machine with docker 
so we need to push them to public or private registry 
first thing we need to push images into docker hub is login

docker login 
docker image push $DOCKERID/ linux_tweet_app:1.0
docker image push $DOCKERID/ linux_tweet_app:2.0

reference
https://training.play-with-docker.com/beginner-linux/
